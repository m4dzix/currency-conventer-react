{"version":3,"sources":["Form/styled.js","Form/ShowResult/styled.js","Form/ShowResult/index.js","useRates.js","Form/index.js","Header/styled.js","Header/index.js","Section/styled.js","Section/index.js","Main/styled.js","Main/ShowDate/styled.js","Main/ShowDate/index.js","Main/useCurrentDate.js","Main/index.js","Wrapper/styled.js","Wrapper/index.js","App.js","serviceWorker.js","GlobalStyle.js","index.js","theme.js"],"names":["StyledForm","styled","form","Paragraph","p","theme","color","tundora","LabelText","span","Span","Select","select","gray","Button","button","tacha","black","Fieldset","fieldset","Legend","legend","Information","div","ShowResult","result","undefined","sourceAmount","toFixed","currencyHave","targetAmount","currencyWant","useRates","useState","rates","date","data","setData","useEffect","setTimeout","fetch","then","response","ok","Error","statusText","json","currenciesAPI","ratesAPI","dateAPI","catch","error","console","Form","currencyApiArray","Object","keys","amount","setAmount","setCurrencyHave","setCurrencyWant","setResult","onSubmit","event","preventDefault","calculateResult","value","onChange","target","name","map","key","as","type","required","step","Title","h1","luxorGold","Header","title","className","Link","a","eperor","boulder","Section","href","rel","StyledMain","main","StyledDate","brighterBlack","breakpoint","mobileMax","ShowDate","Date","showDate","setShowDate","intervalId","setInterval","clearInterval","useCurrentDate","toLocaleString","weekday","hour","minute","second","day","month","formatDate","Main","children","Wrap","Wrapper","App","Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","frangipani","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.37d8a743.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n  margin: 10px;\n  text-align: center;\n  align-self: center;\n  width: 100%;\n`;\nexport const Paragraph = styled.p`\n  font-size: 15px;\n  color: ${({ theme }) => theme.color.tundora};\n`;\nexport const LabelText = styled.span`\n  display: inline-block;\n  text-transform: uppercase;\n  padding: 5px 10px;\n  font-size: 20px;\n`;\nexport const Span = styled.span`\n  font-size: 10px;\n  color: ${({ theme }) => theme.color.tundora};\n`;\nexport const Select = styled.select`\n  padding: 5px;\n  border-radius: 10px;\n  border: solid 2px ${({ theme }) => theme.color.gray};\n`;\nexport const Button = styled.button`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.color.tacha};\n  text-transform: uppercase;\n  padding: 10px;\n  border: solid 3px ${({ theme }) => theme.color.black};\n  border-radius: 10px;\n  margin-top: 20px;\n\n  &:hover {\n    cursor: pointer;\n    filter: brightness(110%);\n  }\n\n  &:active {\n    filter: brightness(120%);\n  }\n`;\nexport const Fieldset = styled.fieldset`\n  border: solid 4px ${({ theme }) => theme.color.black};\n  background-color: peachpuff;\n  border-radius: 10px;\n`;\nexport const Legend = styled.legend`\n  font-size: 30px;\n  background-color: ${({ theme }) => theme.color.tacha};\n  padding: 5px 15px;\n  border: solid 4px ${({ theme }) => theme.color.black};\n  border-radius: 10px;\n`;\nexport const Information = styled.div`\n  font-size: 20px;\n  margin: 50px;\n  text-align: center;\n  align-self: center;\n`;\n","import styled from \"styled-components\";\n\nexport const Paragraph = styled.p`\n  font-size: 30px;\n  margin: 10px;\n`;\n","import React from \"react\";\nimport { Paragraph } from \"./styled\";\n\nconst ShowResult = ({ result }) => (\n  <Paragraph>\n    {result !== undefined && (\n      <>\n        {result.sourceAmount.toFixed(2)}&nbsp;{result.currencyHave}&nbsp;= {\"\"}\n        {result.targetAmount.toFixed(2)}&nbsp;{result.currencyWant}&nbsp;\n      </>\n    )}\n  </Paragraph>\n);\n\nexport default ShowResult;\n","import { useState, useEffect } from \"react\";\n\nexport const useRates = () => {\n  const [data, setData] = useState({\n    rates: \"\",\n    date: \"\",\n  });\n\n  useEffect(() => {\n    const getApi = () => {\n      const currenciesAPI =\n        \"http://api.exchangeratesapi.io/v1/latest?access_key=c0374f958fe4c9766ba330c60d02c1af\";\n\n      fetch(currenciesAPI)\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n          return response;\n        })\n        .then((response) => response.json())\n        .then((currenciesAPI) => {\n          const ratesAPI = currenciesAPI.rates;\n          const dateAPI = currenciesAPI.date;\n          setData({\n            rates: ratesAPI,\n            date: dateAPI,\n          });\n        })\n        .catch((error) => console.error(error));\n    };\n    setTimeout(getApi, 1000);\n  }, []);\n  return data;\n};\n","import React, { useState } from \"react\";\nimport {\n  StyledForm,\n  Paragraph,\n  LabelText,\n  Span,\n  Select,\n  Button,\n  Fieldset,\n  Legend,\n  Information,\n} from \"./styled\";\nimport ShowResult from \"./ShowResult\";\nimport { useRates } from \"../useRates\";\n\nconst Form = () => {\n  const { rates } = useRates();\n  const currencyApiArray = Object.keys(useRates().rates);\n  const [amount, setAmount] = useState(\"\");\n  const [currencyHave, setCurrencyHave] = useState(\"PLN\");\n  const [currencyWant, setCurrencyWant] = useState(\"EUR\");\n\n  const [result, setResult] = useState();\n\n  const calculateResult = (currencyHave, currencyWant, amount) => {\n    setResult({\n      sourceAmount: +amount,\n      currencyHave,\n      targetAmount: (amount * rates[currencyWant]) / rates[currencyHave],\n      currencyWant,\n    });\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    calculateResult(currencyHave, currencyWant, amount);\n  };\n\n  return (\n    <StyledForm onSubmit={onSubmit}>\n      <Fieldset>\n        <Legend>Wymiana waluty</Legend>\n\n        {rates ? (\n          <>\n            <Paragraph>Pole oznaczone * musi zostać wypełnione</Paragraph>\n            <p>\n              <label>\n                <LabelText>\n                  wymiana z:\n                  <Span> (wybierz walutę)</Span>\n                </LabelText>\n                <Select\n                  value={currencyHave}\n                  onChange={({ target }) => setCurrencyHave(target.value)}\n                  name=\"currencyHave\"\n                >\n                  {currencyApiArray.map((currencyApiArray) => (\n                    <option key={currencyApiArray} value={currencyApiArray}>\n                      {currencyApiArray}\n                    </option>\n                  ))}\n                </Select>\n              </label>\n            </p>\n            <p>\n              <label>\n                <LabelText>\n                  wymiana na:\n                  <Span>(wybierz walutę)</Span>\n                </LabelText>\n                <Select\n                  value={currencyWant}\n                  onChange={({ target }) => setCurrencyWant(target.value)}\n                  name=\"currencyWant\"\n                >\n                  {currencyApiArray.map((currencyApiArray) => (\n                    <option key={currencyApiArray} value={currencyApiArray}>\n                      {currencyApiArray}\n                    </option>\n                  ))}\n                </Select>\n              </label>\n            </p>\n            <p>\n              <label>\n                <LabelText>Podaj kwotę*: </LabelText>\n                <Select\n                  as=\"input\"\n                  value={amount}\n                  onChange={({ target }) => setAmount(target.value)}\n                  name=\"value\"\n                  type=\"number\"\n                  required\n                  step=\"0.01\"\n                ></Select>\n              </label>\n            </p>\n            <Button>przelicz</Button>\n            <ShowResult result={result} />\n          </>\n        ) : (\n          <Information>\n            {rates === \"error\"\n              ? \"Ojojoj... wygląda na to, że wystapił błąd, chyba masz problem z internetem, jeśli nie - spróbuj później\"\n              : \"Poczekaj chwilkę, ładujemy teraz dane z Europejskiego Banku Centralnego \"}\n          </Information>\n        )}\n      </Fieldset>\n    </StyledForm>\n  );\n};\n\nexport default Form;\n","import styled from \"styled-components\";\n\nexport const Title = styled.h1`\n  margin: 10px;\n  margin-bottom: 80px;\n  padding: 20px 0;\n  font-size: 40px;\n  text-transform: uppercase;\n  text-align: center;\n  letter-spacing: 3px;\n  background-color: ${({ theme }) => theme.color.luxorGold};\n  border-radius: 10px;\n`;\n","import React from \"react\";\nimport { Title } from \"./styled\";\n\nconst Header = ({ title }) => (\n  <header className=\"header\">\n    <Title>{title}</Title>\n  </header>\n);\n\nexport default Header;\n","import styled from \"styled-components\";\n\nexport const Paragraph = styled.p`\n  padding: 10px;\n  text-align: center;\n  font-size: 20px;\n  background-color: peachpuff;\n  margin: 10px;\n  border: 3px solid ${({ theme }) => theme.color.black};\n  border-radius: 10px;\n`;\n\nexport const Link = styled.a`\n  text-decoration: none;\n  color: ${({ theme }) => theme.color.black};\n\n  &:hover {\n    cursor: pointer;\n    color: ${({ theme }) => theme.color.eperor};\n  }\n  &:active {\n    color: ${({ theme }) => theme.color.boulder};\n  }\n`;\n\nexport const Span = styled.span`\n  font-size: 15px;\n  color: ${({ theme }) => theme.color.gray};\n`;\n","import React from \"react\";\nimport { Paragraph, Link, Span } from \"./styled\";\nimport { useRates } from \"../useRates\";\n\nconst Section = () => {\n  return (\n    <section>\n      <Paragraph>\n        Kursy walut pochodzą ze strony :\n        <Link\n          href=\"http://exchangeratesapi.io/\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          {\" \"}\n          \"exchangeratesapi.io\"\n        </Link>{\" \"}\n        <Span> (otworzy się w nowej karcie)</Span> ; są publikowane przez\n        Europejski Bank Centralny z dnia: &nbsp;{useRates().date}\n      </Paragraph>\n    </section>\n  );\n};\n\nexport default Section;\n","import styled from \"styled-components\";\n\nexport const StyledMain = styled.main`\n  display: flex;\n  align-self: start;\n  flex-direction: column;\n`;\n","import styled from \"styled-components\";\n\nexport const StyledDate = styled.p`\n  font-family: monospace;\n  font-size: 12px;\n  align-self: flex-end;\n  padding: 10px;\n  margin: 10px;\n  display: inline-block;\n  background-color: ${({ theme }) => theme.color.brighterBlack};\n\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\n    text-align: center;\n  }\n`;\n","import React from \"react\";\nimport { useCurrentDate } from \"../useCurrentDate\";\nimport { StyledDate } from \"./styled\";\n\nconst formatDate = (date) =>\n  date.toLocaleString(undefined, {\n    weekday: \"long\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    day: \"numeric\",\n    month: \"long\",\n  });\n\nconst ShowDate = () => {\n  const date = useCurrentDate();\n  return <StyledDate>Aktualna data i godzina: {formatDate(date)}</StyledDate>;\n};\n\nexport default ShowDate;\n","import { useState, useEffect } from \"react\";\n\nexport const useCurrentDate = () => {\n  const [showDate, setShowDate] = useState(new Date());\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setShowDate(new Date());\n    }, 1000);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  return showDate;\n};\n","import React from \"react\";\nimport { StyledMain } from \"./styled\";\nimport ShowDate from \"./ShowDate\";\n\nconst Main = ({ children }) => (\n  <StyledMain>\n    <ShowDate />\n    {children}\n  </StyledMain>\n);\n\nexport default Main;\n","import styled from \"styled-components\";\n\nexport const Wrap = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n`;\n","import React from \"react\";\nimport { Wrap } from \"./styled\";\n\nconst Wrapper = ({ children }) => <Wrap>{children}</Wrap>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport Form from \"./Form\";\nimport Header from \"./Header\";\nimport Section from \"./Section\";\nimport Main from \"./Main\";\nimport Wrapper from \"./Wrapper\";\nfunction App() {\n  return (\n    <Wrapper>\n      <Header title=\"kalkulator walutowy\" />\n      <Main>\n        <Form />\n        <Section />\n      </Main>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\nhtml {\n  box-sizing: border-box;\n  font-family: \"Roboto\", sans-serif;\n};\n*,\n::after,\n::before {\n  box-sizing: inherit;\n};\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n};\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n};\n#root {\n  background-image: url(https://cdn.pixabay.com/photo/2020/06/25/06/32/money-5338733__340.jpg);\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  overflow: auto;\n  height: 100vh;\n};\n\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./theme\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { GlobalStyle } from \"./GlobalStyle\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const theme = {\n  color: {\n    luxorGold: \"#AC8839\",\n    brighterBlack: \"#dddddd\",\n    frangipani: \"#FFDAB9\",\n    tundora: \"#444444\",\n    tacha: \"#D4B268\",\n    black: \"#000000\",\n    eperor: \"#555555\",\n    boulder: \"#777777\",\n    gray: \"#888888\",\n  },\n\n  breakpoint: {\n    mobileMax: 414,\n  },\n};\n"],"sourceRoot":""}